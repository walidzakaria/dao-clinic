{"version":3,"sources":["webpack:///./src/chat/ChatInstance.vue?1792","webpack:///src/chat/ChatInstance.vue","webpack:///./src/chat/ChatInstance.vue?1ef2","webpack:///./src/chat/ChatInstance.vue","webpack:///./src/chat/ChatInstance.vue?877b"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","_s","chatHeader","ref","attrs","_l","m","index","key","clientLetter","message","directives","name","rawName","value","expression","domProps","on","$event","type","indexOf","_k","keyCode","sendMessage","markRead","target","composing","userMessage","staticRenderFns","addLeadingZero","inputNumber","result","props","data","connection","chat","username","userId","clientId","$store","state","unreadNo","computed","lastSenctence","length","created","scrollChat","methods","getWebsocketLink","console","log","room","wsHost","wsLink","user","userInfo","user_id","id","is_client","send","JSON","stringify","readMessage","err","newMessage","calcTime","timeDiff","$nextTick","chatBox","scroll","scrollHeight","watch","$emit","unread","component"],"mappings":"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","file":"static/js/chunk-e05352fc.98c37d00.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"contact-profile\"},[_c('p',[_vm._v(_vm._s(_vm.chatHeader))])]),_c('div',{ref:\"chat-box\",staticClass:\"messages\"},[_c('ul',{attrs:{\"id\":\"message-container\"}},_vm._l((_vm.chat),function(m,index){return _c('div',{key:index},[(m.is_client)?_c('li',{staticClass:\"sent\"},[_c('div',{staticClass:\"chat-logo\"},[_vm._v(_vm._s(_vm.clientLetter))]),_c('p',{staticClass:\"message-text\"},[_vm._v(_vm._s(m.message))])]):_c('li',{staticClass:\"replies\"},[_c('div',{staticClass:\"chat-logo\"},[_vm._v(\"ME\")]),_c('p',{staticClass:\"message-text\"},[_vm._v(_vm._s(m.message))])])])}),0)]),_c('div',{staticClass:\"message-input\"},[_c('div',{staticClass:\"wrap\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.userMessage),expression:\"userMessage\"}],ref:\"chat-input\",attrs:{\"type\":\"text\",\"placeholder\":\"Write your message...\"},domProps:{\"value\":(_vm.userMessage)},on:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.sendMessage()},\"focus\":function($event){return _vm.markRead()},\"input\":function($event){if($event.target.composing){ return; }_vm.userMessage=$event.target.value}}}),_c('button',{staticClass:\"submit btn\",on:{\"click\":function($event){return _vm.sendMessage()}}},[_vm._v(\"Send\")])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n  <div class=\"contact-profile\">\r\n      <p>{{ chatHeader }}</p>\r\n    </div>\r\n    <div class=\"messages\" ref=\"chat-box\">\r\n      <ul id=\"message-container\">\r\n        <div v-for=\"(m, index) in chat\" :key=\"index\">\r\n          <li v-if=\"m.is_client\" class=\"sent\">\r\n            <div class=\"chat-logo\">{{ clientLetter }}</div>\r\n            <p class=\"message-text\">{{ m.message }}</p>\r\n          </li>\r\n          <li v-else class=\"replies\">\r\n            <div class=\"chat-logo\">ME</div>\r\n            <p class=\"message-text\">{{ m.message }}</p>\r\n          </li>\r\n        </div>\r\n      </ul>\r\n    </div>\r\n    <div class=\"message-input\">\r\n      <div class=\"wrap\">\r\n        <input type=\"text\" placeholder=\"Write your message...\"\r\n            v-model=\"userMessage\"\r\n            @keyup.enter=\"sendMessage()\" @focus=\"markRead()\"\r\n            ref=\"chat-input\"/>\r\n        <button @click=\"sendMessage()\" class=\"submit btn\">Send</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions } from 'vuex';\r\n\r\nfunction addLeadingZero(inputNumber) {\r\n  const result = inputNumber < 10 ? `0${inputNumber.toString()}` : inputNumber.toString();\r\n  return result;\r\n}\r\n\r\nexport default {\r\n  name: 'ChatInstance',\r\n  props: ['room', 'userConnect', 'chatHeader'],\r\n  data() {\r\n    return {\r\n      connection: null,\r\n      chat: [],\r\n      userMessage: null,\r\n      username: '',\r\n      userId: 0,\r\n      clientId: this.$store.state.chat.clientId,\r\n      unreadNo: 0,\r\n    };\r\n  },\r\n  computed: {\r\n    clientLetter() {\r\n      return this.chatHeader[0];\r\n    },\r\n    lastSenctence() {\r\n      return this.chat[this.chat.length - 1].message;\r\n    },\r\n  },\r\n  created() {\r\n    this.scrollChat();\r\n  },\r\n  async mounted(event) {\r\n    this.$nextTick(() => {\r\n      this.username = this.$store.state.user.userInfo.username;\r\n      this.userId = this.$store.state.user.userInfo.id || 0;\r\n      this.clientId = this.$store.state.chat.clientId;\r\n      this.chat = [];\r\n      this.connectChat(event);\r\n      this.scrollChat();\r\n    });\r\n  },\r\n  methods: {\r\n    ...mapActions('chat', ['getCSConversation']),\r\n    getWebsocketLink() {\r\n      console.log(this.room);\r\n      const wsScheme = window.location.protocol === 'https:' ? 'wss' : 'ws';\r\n      let wsHost = window.location.host;\r\n      if (wsHost === '127.0.0.1:8080' || wsHost === '127.0.0.1:8000') {\r\n        wsHost = '127.0.0.1:8000';\r\n      } else {\r\n        wsHost += ':8001';\r\n      }\r\n      const wsLink = `${wsScheme}://${wsHost}/ws/chat/${this.room}/admin/${this.userConnect}/`;\r\n      console.log(wsLink);\r\n      return wsLink;\r\n    },\r\n    async connectChat() {\r\n      this.unreadNo = 0;\r\n      if (this.clientId === '0000') {\r\n        await this.$store.dispatch('chat/getClientId').then(\r\n          this.clientId = this.$store.state.chat.clientId,\r\n          this.scrollChat(),\r\n        );\r\n      }\r\n      console.log(this.chat.length);\r\n      if (this.chat.length === 0) {\r\n        await this.getCSConversation(this.room)\r\n          .then((response) => {\r\n            this.chat = response;\r\n            console.log('current chat: ', this.chat);\r\n            this.scrollChat();\r\n          });\r\n      }\r\n      this.applyConnection();\r\n    },\r\n    markRead() {\r\n      this.unreadNo = 0;\r\n      const readMessage = {\r\n        type: 'notification_read',\r\n        message: 'notification_read',\r\n        user: this.$store.state.user.userInfo.username,\r\n        user_id: this.$store.state.user.userInfo.id,\r\n        is_client: false,\r\n      };\r\n      try {\r\n        this.connection.send(JSON.stringify(readMessage));\r\n      } catch (err) {\r\n        console.log(err);\r\n      } finally {\r\n        this.userMessage = null;\r\n      }\r\n    },\r\n    sendMessage() {\r\n      if (this.userMessage) {\r\n        console.log(this.userMessage);\r\n        const newMessage = {\r\n          type: 'chat_message',\r\n          message: this.userMessage,\r\n          user: this.username,\r\n          user_id: this.userId,\r\n          is_client: false,\r\n        };\r\n        this.connection.send(JSON.stringify(newMessage));\r\n        this.userMessage = null;\r\n      }\r\n    },\r\n    async applyConnection() {\r\n      if (!this.connection) {\r\n        // this.getConversation(this.clientId);\r\n        await this.getCSConversation(this.room)\r\n          .then((response) => {\r\n            this.chat = response;\r\n            console.log('current chat: ', this.chat);\r\n          });\r\n        this.connection = new WebSocket(this.getWebsocketLink());\r\n        this.connection.onclose = (e) => {\r\n          setTimeout(() => {\r\n            console.log('connecting...');\r\n            this.connection.reconnet(e);\r\n          }, 1000);\r\n        };\r\n        this.connection.onopen = (event) => {\r\n          console.log(event);\r\n        };\r\n        this.connection.onmessage = (event) => {\r\n          const data = JSON.parse(event.data);\r\n          console.log('chat message data: ', data);\r\n          const newMessage = {\r\n            message: data.message,\r\n            type: data.type,\r\n            room: this.clientId,\r\n            time: data.time,\r\n            user: data.user,\r\n            is_client: data.is_client,\r\n            user_info: data.user_info,\r\n          };\r\n          if (newMessage.type !== 'notification_read') {\r\n            console.log(newMessage.type);\r\n            this.chat.push(newMessage);\r\n            this.scrollChat();\r\n          }\r\n          if (newMessage.is_client && newMessage.type === 'chat_message') {\r\n            this.unreadNo += 1;\r\n          }\r\n          this.scrollChat();\r\n        };\r\n      }\r\n    },\r\n    calcTime(chatTime) {\r\n      const inputTime = new Date(chatTime);\r\n      const currentTime = new Date();\r\n      const timeDiff = Math.round((currentTime - inputTime) / 1000, 0);\r\n      // console.log(inputTime);\r\n      // console.log(timeDiff);\r\n      let result = '';\r\n      if (timeDiff < 30) {\r\n        result = 'few sec.';\r\n      } else if (timeDiff < 60) {\r\n        result = `${timeDiff} sec`;\r\n      } else if (timeDiff < 3600) {\r\n        result = `${Math.floor(timeDiff / 60)} min`;\r\n      } else if (timeDiff < 86400) {\r\n        result = `${Math.floor(timeDiff / 60 / 60)} hrs`;\r\n      } else {\r\n        const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n        const timeDay = addLeadingZero(inputTime.getDate());\r\n        const timeHour = addLeadingZero(inputTime.getHours());\r\n        const timeMinute = addLeadingZero(inputTime.getMinutes());\r\n        result = `${timeDay}${monthNames[inputTime.getMonth()]} ${timeHour}:${timeMinute}`;\r\n      }\r\n      return result;\r\n    },\r\n    scrollChat() {\r\n      this.$nextTick(() => {\r\n        const chatBox = this.$refs['chat-box'];\r\n        if (chatBox) {\r\n          chatBox.scroll(0, chatBox.scrollHeight);\r\n        }\r\n      });\r\n    },\r\n  },\r\n  watch: {\r\n    // open() {\r\n    //   this.$nextTick(() => {\r\n    //     this.scrollChat();\r\n    //   });\r\n    // },\r\n    unreadNo() {\r\n      this.$emit('unreadChanged', {\r\n        room: this.room,\r\n        unread: this.unreadNo,\r\n      });\r\n    },\r\n    // lastSenctence() {\r\n    //   this.$emit('sentenceChanged', {\r\n    //     room: this.room,\r\n    //     lastSentence: this.lastSenctence,\r\n    //   });\r\n    // },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.wrap {\r\n  min-width: 220px !important;\r\n}\r\n\r\n.contact-profile p {\r\n  text-transform: capitalize;\r\n}\r\n\r\n#frame .content {\r\n  float: right;\r\n  width: calc(100% - 340px);\r\n  height: 100%;\r\n  overflow: hidden;\r\n  position: relative;\r\n  border: 1px solid #c4c0c0;\r\n}\r\n@media screen and (max-width: 991px) {\r\n  #frame .content {\r\n    width: 60%;\r\n  }\r\n}\r\n@media screen and (max-width: 735px) {\r\n  #frame .content {\r\n    width: calc(100% - 58px);\r\n    min-width: 300px !important;\r\n    margin-left: 0;\r\n    margin-right: 0;\r\n  }\r\n}\r\n@media screen and (max-width: 680px) {\r\n  #frame .content {\r\n    width: calc(100% - 60px);\r\n  }\r\n}\r\n#frame .content .contact-profile {\r\n  width: 100%;\r\n  height: 60px;\r\n  line-height: 60px;\r\n  background: #c5964f;\r\n  font-weight: bold;\r\n  color: #272627;\r\n  text-align: center;\r\n}\r\n#frame .content .contact-profile img {\r\n  width: 40px;\r\n  border-radius: 50%;\r\n  float: left;\r\n  margin: 9px 12px 0 9px;\r\n}\r\n#frame .content .contact-profile p {\r\n  float: left;\r\n  width: 100%;\r\n  text-align: center;\r\n}\r\n#frame .content .contact-profile .social-media {\r\n  float: right;\r\n}\r\n#frame .content .contact-profile .social-media i {\r\n  margin-left: 14px;\r\n  cursor: pointer;\r\n}\r\n#frame .content .contact-profile .social-media i:nth-last-child(1) {\r\n  margin-right: 20px;\r\n}\r\n#frame .content .contact-profile .social-media i:hover {\r\n  color: #7c766f;\r\n}\r\n#frame .content .messages {\r\n  height: auto;\r\n  min-height: calc(100% - 93px);\r\n  max-height: calc(100% - 93px);\r\n  overflow-y: scroll;\r\n  overflow-x: hidden;\r\n  position: absolute;\r\n  width: 100%;\r\n}\r\n@media screen and (max-width: 735px) {\r\n  #frame .content .messages {\r\n    max-height: calc(100% - 105px);\r\n  }\r\n}\r\n#frame .content .messages::-webkit-scrollbar {\r\n  width: 8px;\r\n  background: transparent;\r\n}\r\n#frame .content .messages::-webkit-scrollbar-thumb {\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n}\r\n#frame .content .messages ul li {\r\n  display: inline-block;\r\n  clear: both;\r\n  /* float: left; */\r\n  margin: 15px 15px 5px 15px;\r\n  width: calc(100% - 25px);\r\n  font-size: 0.9em;\r\n}\r\n#frame .content .messages ul li:nth-last-child(1) {\r\n  margin-bottom: 20px;\r\n}\r\n#frame .content .messages ul li.sent .chat-logo {\r\n  margin: 6px 8px 0 0;\r\n  background-color: #4b4746;\r\n  height: 27px;\r\n  width: 27px;\r\n  color: #c5964f;\r\n  font-weight: bolder;\r\n  text-align: center;\r\n  padding: 5px;\r\n  border-radius: 50%;\r\n  font-family: 'Trebuchet MS', 'Lucida Sans Unicode',\r\n      'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\r\n      text-transform: uppercase;\r\n}\r\n#frame .content .messages ul li.sent .chat-logo {\r\n  margin: 6px 8px 0 0;\r\n  background-color: #4b4746;\r\n}\r\n#frame .content .messages ul li.sent p {\r\n  background: #7c766f;\r\n  color: #f5f5f5;\r\n}\r\n#frame .content .messages ul li.replies .chat-logo {\r\n  float: right;\r\n  margin: 6px 0 0 8px;\r\n  color: #4b4746;\r\n  height: 27px;\r\n  width: 27px;\r\n  background-color: #c5964f;\r\n  font-weight: bolder;\r\n  text-align: center;\r\n  padding: 5px;\r\n  border-radius: 50%;\r\n  font-family: 'Trebuchet MS', 'Lucida Sans Unicode',\r\n      'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\r\n}\r\n#frame .content .messages ul li.replies p {\r\n  background: #f5f5f5;\r\n  float: right;\r\n}\r\n#frame .content .messages ul li img {\r\n  width: 22px;\r\n  border-radius: 50%;\r\n  float: left;\r\n}\r\n#frame .content .messages ul li p {\r\n  display: inline-block;\r\n  padding: 10px 15px;\r\n  border-radius: 20px;\r\n  max-width: 205px;\r\n  line-height: 130%;\r\n}\r\n@media screen and (min-width: 100px) {\r\n  #frame .content .messages ul li p {\r\n    max-width: 300px;\r\n  }\r\n}\r\n#frame .content .message-input {\r\n  position: absolute;\r\n  bottom: 0;\r\n  width: 109%;\r\n  z-index: 99;\r\n}\r\n#frame .content .message-input .wrap {\r\n  position: relative;\r\n}\r\n#frame .content .message-input .wrap input {\r\n  float: left;\r\n  border: none;\r\n  width: calc(100% - 90px);\r\n  padding: 11px 32px 10px 8px;\r\n  color: #272627;\r\n}\r\n@media screen and (min-width: 1125px) {\r\n  #frame .content .message-input .wrap input {\r\n    width: calc(100% - 140px);\r\n  }\r\n}\r\n\r\n#frame .content .message-input .wrap input:focus {\r\n  outline: none;\r\n}\r\n#frame .content .message-input .wrap .attachment {\r\n  position: absolute;\r\n  right: 60px;\r\n  z-index: 4;\r\n  margin-top: 10px;\r\n  font-size: 1.1em;\r\n  color: #7c766f;\r\n  opacity: .5;\r\n  cursor: pointer;\r\n}\r\n@media screen and (max-width: 735px) {\r\n  #frame .content .message-input .wrap .attachment {\r\n    margin-top: 17px;\r\n    right: 65px;\r\n  }\r\n}\r\n#frame .content .message-input .wrap .attachment:hover {\r\n  opacity: 1;\r\n}\r\n#frame .content .message-input .wrap button {\r\n  float: right;\r\n  border: none;\r\n  width: 80px;\r\n  padding: 10px 0;\r\n  cursor: pointer;\r\n  background: #272627;\r\n  color: #f5f5f5;\r\n  position: revert;\r\n  margin-right: 10px;\r\n}\r\n@media screen and (min-width: 1125px) {\r\n  #frame .content .message-input .wrap button {\r\n    margin-right: 20px;\r\n  }\r\n}\r\n\r\n#frame .content .message-input .wrap button:hover {\r\n  background: #7c766f;\r\n}\r\n#frame .content .message-input .wrap button:focus {\r\n  outline: none;\r\n}\r\n\r\n.sent .message-text {\r\n  width: 100%;\r\n  text-align: right;\r\n}\r\n\r\n.reply .message-text {\r\n  width: 100%;\r\n}\r\n\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ChatInstance.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ChatInstance.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChatInstance.vue?vue&type=template&id=73822a0b&scoped=true&\"\nimport script from \"./ChatInstance.vue?vue&type=script&lang=js&\"\nexport * from \"./ChatInstance.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ChatInstance.vue?vue&type=style&index=0&id=73822a0b&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"73822a0b\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ChatInstance.vue?vue&type=style&index=0&id=73822a0b&scoped=true&lang=css&\""],"sourceRoot":""}